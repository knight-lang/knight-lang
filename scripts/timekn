#!/bin/sh

# Support zsh if that's what's wanted
if [ "$SHELL" = /bin/zsh ] && [ ! $__TIMEKN_HAS_BEEN_RUN ]; then
	export __TIMEKN_HAS_BEEN_RUN=1
	exec /bin/zsh -- "$0" "$@"
fi

if [ "${KNIGHT_XTRACE:-0}" -ne 0 ]; then
	export KNIGHT_XTRACE="$((KNIGHT_XTRACE - 1))"
	set -x
fi


# Safety first!
set -uf

# The name of the script: used in `die` and `usage` messages
readonly scriptname="${0##*/}"

# Print out a message with `$scriptname:` prepended before it, then exit.
die () {
	fmt="%s: $1\\n"
	shift
	printf >&2 "$fmt" "$scriptname" "$@"
	exit 1
}

# Print out the usage
usage () { cat; } <<USAGE
usage: $scriptname [-och] [-n count] [--] [args for bootstrap]
options:
	-h   print out help and exit
	-n   the amount of times to iterate; defaults to 50
	-o   if supplied, stdout of the program isn't surpressed
	-c   if supplied, continues even if a program exits.
USAGE

quiet=1
abort=1
count=50

while getopts ':hocn:' flag; do
	case $flag in
	h) usage; exit ;;
	o) quiet= ;;
	c) abort= ;;
	n)
		case $OPTARG in
			*[!0-9]*) die 'count expects an integer'
		esac
		count=$OPTARG
		;;
	:) die 'missing required argument for -%s' "$OPTARG"  ;;
	?) break ;;
	esac
done

## Delete the parsed arguments
shift $((OPTIND - 1))

[ $quiet ] && quiet='exec >/dev/null'
[ $abort ] && abort='|| {
	status=$?
	printf >&2 '\''%s: execution #%d failed with status %d\n'\'' \
		"$__TIMEKN_SCRIPT_NAME" $i $status
	exit $?
}'

timescript=$(mktemp) || die 'unable to create temporary file to time'
trap 'rm -f "$timescript"' EXIT INT

chmod u+x "$timescript"  || die 'unable to make temporary file executable: %s' "$timescript"
cat <<SHELL >$timescript || die 'unable to write to temporary file: %s' "$timescript"
#!/bin/sh
if [ "\${KNIGHT_XTRACE:-0}" -ne 0 ]
then
	KNIGHT_XTRACE="\$((KNIGHT_XTRACE - 1))"
	export KNIGHT_XTRACE
	set -x
fi

$quiet

i=0
while [ \$((i+=1)) -le $count ]
do
	"\$__TIMEKN_BOOTSTRAP" "\$@" $abort
done
SHELL


export KNIGHT_LANG_ROOT="$(dirname -- "$0")"
export KNIGHT_LANG_ROOT="$(dirname -- "$KNIGHT_LANG_ROOT")"

export __TIMEKN_SCRIPT_NAME="$scriptname"
export __TIMEKN_BOOTSTRAP="$KNIGHT_LANG_ROOT/scripts/bootstrap"

echo "$__TIMEKN_BOOTSTRAP"
set -- "$timescript" "$@"
# If `time` is not a builtin shell construct, ensure `--` is passed.
[ "$(command -v time)" != time ] && set -- -- "$@"

time "$timescript" "$@"
